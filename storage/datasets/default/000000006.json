{
  "url": "https://apify.com/templates/python-scrapy",
  "title": "Scrapy · Template · Apify",
  "content": "![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: scrapy.svg](https://apify.com/img/template-icons/scrapy.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: beautifulsoup.svg](https://apify.com/img/template-icons/beautifulsoup.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: beautifulsoup.svg](https://apify.com/img/template-icons/beautifulsoup.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: playwright.svg](https://apify.com/img/template-icons/playwright.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: selenium.svg](https://apify.com/img/template-icons/selenium.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![File: python.svg](https://apify.com/img/template-icons/python.svg)\n![Apify logo (File: favicon.svg)](https://apify.com/img/favicon.svg)\n![GDPR image (File: GDPR_a807ac9a_ba0683f740.svg)](https://cdn-cms.apify.com/GDPR_a807ac9a_ba0683f740.svg)\n![SOC2 image (File: SOC_dc6cf5ae_f7999d700f.svg)](https://cdn-cms.apify.com/SOC_dc6cf5ae_f7999d700f.svg)\n![GetApp Apify user reviews image (File: Get_App_1f4079a540.png)](https://cdn-cms.apify.com/Get_App_1f4079a540.png)\n![Software Advice Apify reviews image (File: Softwareadvice_88026ee6c2.png)](https://cdn-cms.apify.com/Softwareadvice_88026ee6c2.png)\n![Capterra Apify user reviews image (File: Capterra_ce83db3070.png)](https://cdn-cms.apify.com/Capterra_ce83db3070.png)\n![G2 Apify user reviews image (File: G2_d80d60f2f8.png)](https://cdn-cms.apify.com/G2_d80d60f2f8.png)\n![TrustRadius Apify user reviews image (File: Trust_Radius_7ca0e0bdad.png)](https://cdn-cms.apify.com/Trust_Radius_7ca0e0bdad.png)\n![Crozdesk Apify user reviews image (File: Crozdesk_1d12ceb040.png)](https://cdn-cms.apify.com/Crozdesk_1d12ceb040.png)\n\nSkip to content\n\n[](/)\n\n[Get started](https://console.apify.com/sign-up)[Log in](https://console.apify.com/sign-in)\n\n  * Product\n\nBack\n\n[Start here!Get data with ready-made web scrapers for popular websitesBrowse 4,000+ Actors](/store)\n\nThe Apify platform\n\n    * [Apify StorePre-built web scraping tools](/store)\n    * [ActorsBuild and run serverless programs](/actors)\n    * [IntegrationsConnect with apps and services](/integrations)\n    * [StorageStore results for web scrapers](/storage)\n\nAnti-blocking\n\n    * [Anti-blockingScrape without getting blocked](/anti-blocking)\n    * [ProxyRotate scraper IP addresses](/proxy)\n\nOpen source\n\n    * [CrawleeWeb scraping and crawling library](https://crawlee.dev/)\n\n  * Solutions\n\nBack\n\nWeb data for\n\n    * [Enterprise](/enterprise)\n    * [Startups](/resources/startups)\n    * [Universities](/resources/universities)\n    * [Nonprofits](/resources/nonprofits)\n\nUse cases\n\n    * [Data for generative AI](/data-for-generative-ai)\n    * [Lead generation](/use-cases/lead-generation)\n    * [Market research](/use-cases/market-research)\n    * [Sentiment analysis](/use-cases/sentiment-analysis)\n    * [View more →](/use-cases)\n\nConsulting\n\n    * [Apify Professional Services](/professional-services)\n    * [Apify Partners](/partners)\n\n  * Developers\n\nBack\n\n    * [DocumentationFull reference for the Apify platform](https://docs.apify.com/)\n\nGet started\n\n    * [Web scraping academyCourses for beginners and experts](https://docs.apify.com/academy)\n    * [Code templatesPython, JavaScript, and TypeScript](/templates)\n    * [Deploy to ApifyWith CLI or GitHub integration](https://docs.apify.com/platform/actors/development/deployment)\n    * [Monetize your codePublish your scrapers and get paid](https://apify.com/partners/actor-developers)\n\nLearn\n\n    * [API reference](https://docs.apify.com/api)\n    * [CLI](https://docs.apify.com/cli/)\n    * [SDK](https://docs.apify.com/sdk)\n    * [Crawlee](https://crawlee.dev/)\n\n[Apify open source fair shareWe will support and reward every open-source project on Apify StoreJoin now](/partners/open-source-fair-share)\n\n  * Resources\n\nBack\n\n    * [Help and supportAdvice and answers about Apify](https://help.apify.com/en/)\n    * [Submit your ideasTell us the Actors you want](/ideas)\n    * [ChangelogSee what’s new on Apify](/change-log)\n    * [Customer storiesFind out how others use Apify](/success-stories)\n\nCompany\n\n    * [About Apify](/about)\n    * [Contact us](/contact)\n    * [Blog](https://blog.apify.com/)\n    * [Apify Partners](/partners)\n    * [Affiliate Program](/partners/affiliate)\n    * [JobsWe're hiring!](/jobs)\n\n[Join our DiscordTalk to scraping experts](https://discord.com/invite/jyEM2PRvMU)\n\n  * [Pricing](/pricing)\n\n  * [Contact sales](/contact-sales)\n\n\n\n\n[Contact sales](/contact-sales)[Log in](https://console.apify.com/sign-in)\n\n[Get started](https://console.apify.com/sign-up)\n\n[Back to template gallery](/templates)\n\n# Scrapy\n\nThis example Scrapy spider scrapes page titles from URLs defined in input parameter. It shows how to use Apify SDK for Python and Scrapy pipelines to save results.\n\nLanguage\n\npython\n\nTools\n\nscrapy\n\nUse cases\n\nWeb scraping\n\nFeatures\n\n[Input schema](https://docs.apify.com/platform/actors/development/actor-definition/input-schema)\n\n[Run on Apify](https://console.apify.com/actors/templates?selectedTemplate=python-scrapy)Use locally\n\nsrc/main.py\n\nsrc/spiders/title.py\n\nsrc/__main__.py\n\nsrc/items.py\n\nsrc/pipelines.py\n\nsrc/settings.py\n    \n    \n    1\"\"\"This module defines the main entry point for the Apify Actor.\n    2\n    3This module defines the main coroutine for the Apify Scrapy Actor, executed from the __main__.py file. The coroutine\n    4processes the Actor's input and executes the Scrapy spider. Additionally, it updates Scrapy project settings by\n    5applying Apify-related settings. Which includes adding a custom scheduler, retry middleware, and an item pipeline\n    6for pushing data to the Apify dataset.\n    7\n    8Customization:\n    9--------------\n    10\n    11Feel free to customize this file to add specific functionality to the Actor, such as incorporating your own Scrapy\n    12components like spiders and handling Actor input. However, make sure you have a clear understanding of your\n    13modifications. For instance, removing `apply_apify_settings` break the integration between Scrapy and Apify.\n    14\n    15Documentation:\n    16--------------\n    17\n    18For an in-depth description of the Apify-Scrapy integration process, our Scrapy components, known limitations and\n    19other stuff, please refer to the following documentation page: https://docs.apify.com/cli/docs/integrating-scrapy.\n    20\"\"\"\n    21\n    22from __future__ import annotations\n    23\n    24from apify import Actor\n    25from apify.scrapy import apply_apify_settings\n    26from scrapy.crawler import CrawlerRunner\n    27from scrapy.utils.defer import deferred_to_future\n    28\n    29# Import your Scrapy spider here.\n    30from .spiders import TitleSpider as Spider\n    31\n    32\n    33async def main() -> None:\n    34    \"\"\"Apify Actor main coroutine for executing the Scrapy spider.\"\"\"\n    35    async with Actor:\n    36        # Retrieve and process Actor input.\n    37        actor_input = await Actor.get_input() or {}\n    38        start_urls = [url['url'] for url in actor_input.get('startUrls', [])]\n    39        allowed_domains = actor_input.get('allowedDomains')\n    40        proxy_config = actor_input.get('proxyConfiguration')\n    41\n    42        # Apply Apify settings, which will override the Scrapy project settings.\n    43        settings = apply_apify_settings(proxy_config=proxy_config)\n    44\n    45        # Create CrawlerRunner and execute the Scrapy spider.\n    46        crawler_runner = CrawlerRunner(settings)\n    47        crawl_deferred = crawler_runner.crawl(\n    48            Spider,\n    49            start_urls=start_urls,\n    50            allowed_domains=allowed_domains,\n    51        )\n    52        await deferred_to_future(crawl_deferred)\n\n## Python Scrapy template\n\nA template example built with Scrapy to scrape page titles from URLs defined in the input parameter. It shows how to use Apify SDK for Python and Scrapy pipelines to save results.\n\n## Included features\n\n  * **[Apify SDK](https://docs.apify.com/sdk/python/)** for Python - a toolkit for building Apify [Actors](https://apify.com/actors) and scrapers in Python\n  * **[Input schema](https://docs.apify.com/platform/actors/development/input-schema)** \\- define and easily validate a schema for your Actor's input\n  * **[Request queue](https://docs.apify.com/sdk/python/docs/concepts/storages#working-with-request-queues)** \\- queues into which you can put the URLs you want to scrape\n  * **[Dataset](https://docs.apify.com/sdk/python/docs/concepts/storages#working-with-datasets)** \\- store structured data where each object stored has the same attributes\n  * **[Scrapy](https://scrapy.org/)** \\- a fast high-level web scraping framework\n\n\n\n## How it works\n\nThis code is a Python script that uses Scrapy to scrape web pages and extract data from them. Here's a brief overview of how it works:\n\n  * The script reads the input data from the Actor instance, which is expected to contain a `start_urls` key with a list of URLs to scrape.\n  * The script then creates a Scrapy spider that will scrape the URLs. This Spider (class `TitleSpider`) is storing URLs and titles.\n  * Scrapy pipeline is used to save the results to the default dataset associated with the Actor run using the `push_data` method of the Actor instance.\n  * The script catches any exceptions that occur during the [web scraping](https://apify.com/web-scraping) process and logs an error message using the `Actor.log.exception` method.\n\n\n\n## Resources\n\n  * [Web scraping with Scrapy](https://blog.apify.com/web-scraping-with-scrapy/)\n  * [Python tutorials in Academy](https://docs.apify.com/academy/python)\n  * [Alternatives to Scrapy for web scraping in 2023](https://blog.apify.com/alternatives-scrapy-web-scraping/)\n  * [Beautiful Soup vs. Scrapy for web scraping](https://blog.apify.com/beautiful-soup-vs-scrapy-web-scraping/)\n  * [Integration with Zapier](https://apify.com/integrations), Make, Google Drive, and others\n  * [Video guide on getting scraped data using Apify API](https://www.youtube.com/watch?v=ViYYDHSBAKM)\n  * A short guide on how to build web scrapers using code templates:\n\n\n\n## Related templates\n\n[**Start with Python** Scrape single page with provided URL with HTTPX and extract data from page's HTML with Beautiful Soup.](/templates/python-start)[**BeautifulSoup** Example of a web scraper that uses Python HTTPX to scrape HTML from URLs provided on input, parses it using BeautifulSoup and saves results to storage.](/templates/python-beautifulsoup)[**Playwright + Chrome** Crawler example that uses headless Chrome driven by Playwright to scrape a website. Headless browsers render JavaScript and can help when getting blocked.](/templates/python-playwright)[**Selenium + Chrome** Scraper example built with Selenium and headless Chrome browser to scrape a website and save the results to storage. A popular alternative to Playwright.](/templates/python-selenium)[**Empty Python project** Empty template with basic structure for the Actor with Apify SDK that allows you to easily add your own functionality.](/templates/python-empty)[**Standby Python project** Template with basic structure for an Actor using Standby mode that allows you to easily add your own functionality.](/templates/python-standby)\n\n## Already have a solution in mind?\n\nSign up for a free Apify account and deploy your code to the platform in just a few minutes! If you want a head start without coding it yourself, browse our Store of existing solutions.\n\n[Import your code](https://console.apify.com/actors/new)[Go to store](/store)\n\nProduct\n\n  * [Apify Store](/store)\n\n  * [Integrations](/integrations)\n\n  * [Proxy](/proxy)\n\n  * [Crawlee](https://crawlee.dev/)\n\n\n\n\nDevelopers\n\n  * [Documentation](https://docs.apify.com/)\n\n  * [Code templates](/templates)\n\n  * [Deploy to Apify](https://docs.apify.com/platform/actors/development/deployment)\n\n  * [API reference](https://docs.apify.com/api)\n\n  * [Get paid on Apify](/partners/actor-developers)\n\n\n\n\nConsulting\n\n  * [Professional Services](/professional-services)\n\n  * [Apify Partners](/partners)\n\n\n\n\nSupport\n\n  * [Help & Support](https://help.apify.com/en/)\n\n  * [Submit your ideas](/ideas)\n\n  * [Forum](https://discord.apify.com/)\n\n\n\n\nCompany\n\n  * [About Apify](/about)\n\n  * [Contact us](/contact)\n\n  * [Events](https://lu.ma/apify)\n\n  * [Blog](https://blog.apify.com/)\n\n  * [Become an affiliate](/partners/affiliate)\n\n  * [Customer stories](/success-stories)\n\n  * [Changelog](/change-log)\n\n  * [JobsWe're hiring!](/jobs)\n\n\n\n\n[](/)\n\nSocials\n\n  * [](https://www.linkedin.com/company/apifytech/)\n  * [](https://x.com/apify)\n  * [](https://github.com/apify)\n  * [](https://www.youtube.com/apify)\n  * [](https://discord.com/invite/jyEM2PRvMU)\n  * [](https://www.tiktok.com/@apifytech)\n\n\n\nSecurity\n\n  * [](https://docs.apify.com/legal/gdpr-information)\n  * [](https://trust.apify.com/)\n\n\n\nReviews\n\n  * [](https://www.getapp.com/business-intelligence-analytics-software/a/apify/)\n  * [](https://www.softwareadvice.com/data-extraction/apify-profile/)\n  * [](https://www.capterra.com/p/150854/Apify/)\n  * [](https://www.g2.com/products/apify/reviews)\n  * [](https://www.trustradius.com/products/apify/reviews)\n  * [](https://crozdesk.com/software/apify)\n\n\n\n[Loading status...](https://status.apify.com/)\n\n[Terms of Use](https://docs.apify.com/legal/general-terms-and-conditions)\n\n[Privacy Policy](https://docs.apify.com/legal/privacy-policy)\n\n[Cookie Policy](https://docs.apify.com/legal/cookie-policy)\n\nCookie settings\n\n© 2025 Apify\n"
}